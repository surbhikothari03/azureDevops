trigger:
- main

variables:
  imageName: 'azuredevops'
  containerRegistry: 'azuredevops.azurecr.io'  # üîÅ Replace with your ACR login server
  dockerfilePath: Dockerfile

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: BuildAndPush
  jobs:
  - job: Build
    steps:
    - task: Docker@2
      displayName: 'Build Docker image'
      inputs:
        command: 'build'
        Dockerfile: '$(dockerfilePath)'
        tags: |
          $(containerRegistry)/$(imageName):latest

    - task: Docker@2
      displayName: 'Push Docker image to public ACR'
      inputs:
        command: 'push'
        tags: |
          $(containerRegistry)/$(imageName):latest

- stage: Deploy
  dependsOn: BuildAndPush
  jobs:
  - job: DeployToVM
    steps:
    - task: SSH@0
      displayName: 'Deploy on Azure VM'
      inputs:
        sshEndpoint: 'lba-vm'  # üîÅ Use your actual SSH service connection name
        runOptions: 'inline'
        inline: |
          echo "Pulling image from ACR..."
          docker pull $(containerRegistry)/$(imageName):latest

          echo "Stopping old container (if any)..."
          docker stop nodejs-container || true
          docker rm nodejs-container || true

          echo "Starting new container..."
          docker run -d --name nodejs-container -p 3000:3000 $(containerRegistry)/$(imageName):latest
